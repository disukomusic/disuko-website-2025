<<<<<<< Updated upstream
// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import {
  PlasmicThemeSwitcher,
  DefaultThemeSwitcherProps
} from "./plasmic/disuko_website_retro_version/PlasmicThemeSwitcher";
import { HTMLElementRefOf } from "@plasmicapp/react-web";

// Your component props start with props for variants and slots you defined
// in Plasmic, but you can add more here, like event handlers that you can
// attach to named nodes in your component.
//
// If you don't want to expose certain variants or slots as a prop, you can use
// Omit to hide them:
//
// interface ThemeSwitcherProps extends Omit<DefaultThemeSwitcherProps, "hideProps1"|"hideProp2"> {
//   // etc.
// }
//
// You can also stop extending from DefaultThemeSwitcherProps altogether and have
// total control over the props for your component.
export interface ThemeSwitcherProps extends DefaultThemeSwitcherProps {}

function ThemeSwitcher_(
  props: ThemeSwitcherProps,
  ref: HTMLElementRefOf<"div">
) {
  // Use PlasmicThemeSwitcher to render this component as it was
  // designed in Plasmic, by activating the appropriate variants,
  // attaching the appropriate event handlers, etc.  You
  // can also install whatever React hooks you need here to manage state or
  // fetch data.
  //
  // Props you can pass into PlasmicThemeSwitcher are:
  // 1. Variants you want to activate,
  // 2. Contents for slots you want to fill,
  // 3. Overrides for any named node in the component to attach behavior and data,
  // 4. Props to set on the root node.
  //
  // By default, we are just piping all ThemeSwitcherProps here, but feel free
  // to do whatever works for you.

  return <PlasmicThemeSwitcher root={{ ref }} {...props} />;
}

=======
import * as React from "react";
import {
  PlasmicThemeSwitcher,
  DefaultThemeSwitcherProps,
} from "./plasmic/disuko_website_retro_version/PlasmicThemeSwitcher";
import { HTMLElementRefOf } from "@plasmicapp/react-web";

// Props interface for the ThemeSwitcher component
export interface ThemeSwitcherProps extends DefaultThemeSwitcherProps {}

// Internal component with custom logic
function ThemeSwitcher_(
    props: ThemeSwitcherProps,
    ref: HTMLElementRefOf<"div">
) {
  const [theme, setTheme] = React.useState("default"); // Default theme state

  const handleThemeChange = (newTheme: string) => {
    setTheme(newTheme);
    document.body.dataset.plasmicTheme = newTheme; // Update the data attribute for global variants
  };

  return (
      <PlasmicThemeSwitcher
          root={{ ref }}
          {...props}
          // Pass the dropdown as a slot or override to Plasmic
          dropdown={{
            as: "select",
            props: {
              value: theme,
              onChange: (e: React.ChangeEvent<HTMLSelectElement>) =>
                  handleThemeChange(e.target.value),
            },
            children: (
                <>
                  <option value="theme">Default</option>
                  <option value="classic">Classic</option>
                </>
            ),
          }}
      />
  );
}

// Forward ref for external use
>>>>>>> Stashed changes
const ThemeSwitcher = React.forwardRef(ThemeSwitcher_);
export default ThemeSwitcher;
