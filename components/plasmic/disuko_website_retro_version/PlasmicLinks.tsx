// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: x4VgG6kzZCVuaqknYN7tgc
// Component: 1AxjPUmLarmm

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import WindowButton from "../../WindowButton"; // plasmic-import: KZYdo-R8GYAn/component
import { AntdPopover } from "@plasmicpkgs/antd5/skinny/registerPopover";
import Navbar from "../../Navbar"; // plasmic-import: 5THU1wffFibB/component
import Tilt from "@plasmicpkgs/react-parallax-tilt";
import Footer from "../../Footer"; // plasmic-import: shKoGjSwLEEB/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";

import { useScreenVariants as useScreenVariantsdmuurUfQuA6N } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: DmuurUFQuA6N/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: x4VgG6kzZCVuaqknYN7tgc/projectcss
import sty from "./PlasmicLinks.module.css"; // plasmic-import: 1AxjPUmLarmm/css

import NounPixelHeart10989631SvgIcon from "./icons/PlasmicIcon__NounPixelHeart10989631Svg"; // plasmic-import: tvndHRt1AD9R/icon
import BrandYoutubeSvgIcon from "./icons/PlasmicIcon__BrandYoutubeSvg"; // plasmic-import: lDUI8t8B7I6-/icon
import HeadphonesSvgIcon from "./icons/PlasmicIcon__HeadphonesSvg"; // plasmic-import: NucfzTbZic8q/icon
import PigMoneySvgIcon from "./icons/PlasmicIcon__PigMoneySvg"; // plasmic-import: Mw15Gxb9gfwR/icon
import BrandSpotifySvgIcon from "./icons/PlasmicIcon__BrandSpotifySvg"; // plasmic-import: Ezp_TCh0SsEl/icon
import BrandAppleSvgIcon from "./icons/PlasmicIcon__BrandAppleSvg"; // plasmic-import: 2kghRMT1oj_X/icon
import BrandBandcampSvgIcon from "./icons/PlasmicIcon__BrandBandcampSvg"; // plasmic-import: 65hkbHVvIUOy/icon
import BrandSoundcloudSvgIcon from "./icons/PlasmicIcon__BrandSoundcloudSvg"; // plasmic-import: gX3gVfdcEQTo/icon
import BrandInstagramSvgIcon from "./icons/PlasmicIcon__BrandInstagramSvg"; // plasmic-import: UNj-Ct7gpMOu/icon
import BlueskyLogoSvgIcon from "./icons/PlasmicIcon__BlueskyLogoSvg"; // plasmic-import: FXCw0lEuMhcp/icon
import BrandDiscordSvgIcon from "./icons/PlasmicIcon__BrandDiscordSvg"; // plasmic-import: 732Cdqpk5Xvi/icon
import LinkSvgIcon from "./icons/PlasmicIcon__LinkSvg"; // plasmic-import: 6dLhR5cJXVSX/icon
import BrandTwitterSvgIcon from "./icons/PlasmicIcon__BrandTwitterSvg"; // plasmic-import: ESoHyvZOQYtV/icon

createPlasmicElementProxy;

export type PlasmicLinks__VariantMembers = {};
export type PlasmicLinks__VariantsArgs = {};
type VariantPropType = keyof PlasmicLinks__VariantsArgs;
export const PlasmicLinks__VariantProps = new Array<VariantPropType>();

export type PlasmicLinks__ArgsType = {};
type ArgPropType = keyof PlasmicLinks__ArgsType;
export const PlasmicLinks__ArgProps = new Array<ArgPropType>();

export type PlasmicLinks__OverridesType = {
  root?: Flex__<"div">;
  windowButton?: Flex__<typeof WindowButton>;
  popover?: Flex__<typeof AntdPopover>;
  navbar?: Flex__<typeof Navbar>;
  main?: Flex__<"div">;
  img?: Flex__<typeof PlasmicImg__>;
  spotify?: Flex__<typeof Tilt>;
  itunes?: Flex__<typeof Tilt>;
  bandcamp?: Flex__<typeof Tilt>;
  soundcloud?: Flex__<typeof Tilt>;
  audius?: Flex__<typeof Tilt>;
  instagram?: Flex__<typeof Tilt>;
  youtube?: Flex__<typeof Tilt>;
  bluesky?: Flex__<typeof Tilt>;
  discord?: Flex__<typeof Tilt>;
  disukoFlipsYoutuibe?: Flex__<typeof Tilt>;
  vero?: Flex__<typeof Tilt>;
  twitter?: Flex__<typeof Tilt>;
  footer?: Flex__<typeof Footer>;
  embedHtml?: Flex__<typeof Embed>;
};

export interface DefaultLinksProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicLinks__RenderFunc(props: {
  variants: PlasmicLinks__VariantsArgs;
  args: PlasmicLinks__ArgsType;
  overrides: PlasmicLinks__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "popover.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsdmuurUfQuA6N()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">{PlasmicLinks.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicLinks.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicLinks.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicLinks.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicLinks.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicLinks.pageMetadata.description}
        />
        <meta
          key="og:image"
          property="og:image"
          content={PlasmicLinks.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicLinks.pageMetadata.ogImageSrc}
        />
        <link rel="canonical" href={PlasmicLinks.pageMetadata.canonical} />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <WindowButton
            data-plasmic-name={"windowButton"}
            data-plasmic-override={overrides.windowButton}
            className={classNames("__wab_instance", sty.windowButton)}
          >
            <AntdPopover
              data-plasmic-name={"popover"}
              data-plasmic-override={overrides.popover}
              arrow={true}
              className={classNames("__wab_instance", sty.popover)}
              content={null}
              contentText={"Back To Main Website"}
              defaultStylesClassName={classNames(
                projectcss.root_reset,
                projectcss.plasmic_default_styles,
                projectcss.plasmic_mixins,
                projectcss.plasmic_tokens,
                plasmic_antd_5_hostless_css.plasmic_tokens,
                plasmic_plasmic_rich_components_css.plasmic_tokens
              )}
              mouseEnterDelay={0}
              mouseLeaveDelay={0}
              onOpenChange={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, ["popover", "open"]).apply(
                  null,
                  eventArgs
                );
              }}
              open={generateStateValueProp($state, ["popover", "open"])}
              placement={"right"}
              popoverScopeClassName={sty["popover__popover"]}
              title={null}
              trigger={"hover"}
            >
              <NounPixelHeart10989631SvgIcon
                className={classNames(projectcss.all, sty.svg__pjeRp)}
                role={"img"}
              />
            </AntdPopover>
          </WindowButton>
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <Stack__
            as={"div"}
            data-plasmic-name={"main"}
            data-plasmic-override={overrides.main}
            hasGap={true}
            className={classNames(projectcss.all, sty.main)}
          >
            <PlasmicImg__
              data-plasmic-name={"img"}
              data-plasmic-override={overrides.img}
              alt={""}
              className={classNames(sty.img)}
              displayHeight={"103px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/disuko_website_retro_version/images/logo2023Png.png",
                fullWidth: 2000,
                fullHeight: 2000,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___0OQyz
              )}
            >
              {"disuko"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__gBMn
              )}
            >
              {
                "Hi everyone! My name is Disuko. I'm a producer, DJ, and content creator!"
              }
            </div>
            <PlasmicLink__
              className={classNames(
                projectcss.all,
                projectcss.a,
                sty.link___8MnUh
              )}
              component={Link}
              href={`/retro`}
              platform={"nextjs"}
              tabIndex={10}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tgzdD
                )}
              >
                {"GAMEBOY COMISSION STATUS:"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__gpnFu
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#66FF41" }}
                  >
                    {"Open!"}
                  </span>
                </React.Fragment>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vTdM
                )}
              >
                {"https://disuko.gay/retro"}
              </div>
            </PlasmicLink__>
            <Tilt
              className={classNames("__wab_instance", sty.tilt__s8KYd)}
              glareEnable={false}
              gyroscope={true}
              tiltMaxAngleX={10}
              tiltMaxAngleY={10}
              tiltReverse={true}
              trackOnWindow={false}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__kx9P4
                )}
                component={Link}
                href={"https://www.youtube.com/watch?v=pegx7KEoYoA"}
                platform={"nextjs"}
                target={"_blank"}
              >
                <div className={classNames(projectcss.all, sty.columns__lmqsm)}>
                  <div
                    className={classNames(projectcss.all, sty.column__qR8Y5)}
                  >
                    <BrandYoutubeSvgIcon
                      className={classNames(projectcss.all, sty.svg__uAhhK)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__bysdb)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gbVOc
                      )}
                    >
                      {"Be kind, rewind AMV"}
                    </div>
                  </div>
                </div>
              </PlasmicLink__>
            </Tilt>
            <Tilt
              className={classNames("__wab_instance", sty.tilt___2BIVw)}
              glareEnable={false}
              gyroscope={true}
              tiltMaxAngleX={10}
              tiltMaxAngleY={10}
              tiltReverse={true}
              trackOnWindow={false}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__l2Yh
                )}
                component={Link}
                href={
                  "https://soundcloud.com/disukomusic/cosmic-disorder-from-divinityduality"
                }
                platform={"nextjs"}
                target={"_blank"}
              >
                <div className={classNames(projectcss.all, sty.columns__cJlu)}>
                  <div
                    className={classNames(projectcss.all, sty.column__exqaM)}
                  >
                    <HeadphonesSvgIcon
                      className={classNames(projectcss.all, sty.svg__luwui)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__qfAdi)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mCQo
                      )}
                    >
                      {
                        "-COSMIC\u200b-\u200b+\u200b-\u200bDISORDER-\u3010from ~DIVINITY:DUALITY~\u3011 "
                      }
                    </div>
                  </div>
                </div>
              </PlasmicLink__>
            </Tilt>
            <Tilt
              className={classNames("__wab_instance", sty.tilt___2QKfL)}
              glareEnable={false}
              gyroscope={true}
              tiltMaxAngleX={10}
              tiltMaxAngleY={10}
              tiltReverse={true}
              trackOnWindow={false}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__hSzz5
                )}
                component={Link}
                href={"https://www.youtube.com/@disuko/membership"}
                platform={"nextjs"}
                target={"_blank"}
              >
                <div
                  className={classNames(projectcss.all, sty.columns___5PXOg)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column___8P4Uu)}
                  >
                    <PigMoneySvgIcon
                      className={classNames(projectcss.all, sty.svg__eW38Y)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__ql8Ak)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ombbq
                      )}
                    >
                      {"monthly stickers!"}
                    </div>
                  </div>
                </div>
              </PlasmicLink__>
            </Tilt>
            <Tilt
              className={classNames("__wab_instance", sty.tilt__ndWcX)}
              glareEnable={false}
              gyroscope={true}
              tiltMaxAngleX={10}
              tiltMaxAngleY={10}
              tiltReverse={true}
              trackOnWindow={false}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__e8SjN
                )}
                component={Link}
                href={"https://disukoretrogames.etsy.com"}
                platform={"nextjs"}
                target={"_blank"}
              >
                <div className={classNames(projectcss.all, sty.columns__atHWo)}>
                  <div
                    className={classNames(projectcss.all, sty.column__x4Lff)}
                  >
                    <PigMoneySvgIcon
                      className={classNames(projectcss.all, sty.svg___0NvRj)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__tl71Y)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hzGk
                      )}
                    >
                      {"etsy store"}
                    </div>
                  </div>
                </div>
              </PlasmicLink__>
            </Tilt>
            <Tilt
              className={classNames("__wab_instance", sty.tilt__r41J2)}
              glareEnable={false}
              gyroscope={true}
              tiltMaxAngleX={10}
              tiltMaxAngleY={10}
              tiltReverse={true}
              trackOnWindow={false}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__bFaBw
                )}
                component={Link}
                href={"https://www.fiverr.com/share/8mN3dp"}
                platform={"nextjs"}
              >
                <div className={classNames(projectcss.all, sty.columns__uxPyq)}>
                  <div className={classNames(projectcss.all, sty.column__q5ND)}>
                    <PigMoneySvgIcon
                      className={classNames(projectcss.all, sty.svg__piYkx)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__lg7Ns)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qBaa
                      )}
                    >
                      {"commissions open!"}
                    </div>
                  </div>
                </div>
              </PlasmicLink__>
            </Tilt>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__rAcS8
              )}
            >
              {"streaming platforms"}
            </div>
            <Tilt
              data-plasmic-name={"spotify"}
              data-plasmic-override={overrides.spotify}
              className={classNames("__wab_instance", sty.spotify)}
              glareEnable={false}
              gyroscope={true}
              tiltMaxAngleX={10}
              tiltMaxAngleY={10}
              tiltReverse={true}
              trackOnWindow={false}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__j9SXb
                )}
                component={Link}
                href={"https://open.spotify.com/artist/7miowOQruHb1GpKBlV4tjl"}
                platform={"nextjs"}
              >
                <div className={classNames(projectcss.all, sty.columns__ck6Dl)}>
                  <div
                    className={classNames(projectcss.all, sty.column__x9Ld0)}
                  >
                    <BrandSpotifySvgIcon
                      className={classNames(projectcss.all, sty.svg__yWd2)}
                      role={"img"}
                    />
                  </div>
                  <div className={classNames(projectcss.all, sty.column__qvt9)}>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__myeM
                      )}
                    >
                      {"spotify"}
                    </div>
                  </div>
                </div>
              </PlasmicLink__>
            </Tilt>
            <Tilt
              data-plasmic-name={"itunes"}
              data-plasmic-override={overrides.itunes}
              className={classNames("__wab_instance", sty.itunes)}
              glareEnable={false}
              gyroscope={true}
              tiltMaxAngleX={10}
              tiltMaxAngleY={10}
              tiltReverse={true}
              trackOnWindow={false}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__yKu0R
                )}
                component={Link}
                href={"https://music.apple.com/us/artist/disuko/1497273303"}
                platform={"nextjs"}
              >
                <div
                  className={classNames(projectcss.all, sty.columns___0M6NZ)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__c1NYv)}
                  >
                    <BrandAppleSvgIcon
                      className={classNames(projectcss.all, sty.svg__lrQfO)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__tbQvj)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xWzG
                      )}
                    >
                      {"itunes / apple music"}
                    </div>
                  </div>
                </div>
              </PlasmicLink__>
            </Tilt>
            <Tilt
              data-plasmic-name={"bandcamp"}
              data-plasmic-override={overrides.bandcamp}
              className={classNames("__wab_instance", sty.bandcamp)}
              glareEnable={false}
              gyroscope={true}
              tiltMaxAngleX={10}
              tiltMaxAngleY={10}
              tiltReverse={true}
              trackOnWindow={false}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__tmWwQ
                )}
                component={Link}
                href={"https://disuko.bandcamp.com"}
                platform={"nextjs"}
              >
                <div className={classNames(projectcss.all, sty.columns__iLDsy)}>
                  <div
                    className={classNames(projectcss.all, sty.column__q63EC)}
                  >
                    <BrandBandcampSvgIcon
                      className={classNames(projectcss.all, sty.svg__acXo2)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__jcupf)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cXGzD
                      )}
                    >
                      {"bandcamp"}
                    </div>
                  </div>
                </div>
              </PlasmicLink__>
            </Tilt>
            <Tilt
              data-plasmic-name={"soundcloud"}
              data-plasmic-override={overrides.soundcloud}
              className={classNames("__wab_instance", sty.soundcloud)}
              glareEnable={false}
              gyroscope={true}
              tiltMaxAngleX={10}
              tiltMaxAngleY={10}
              tiltReverse={true}
              trackOnWindow={false}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__oPdhe
                )}
                component={Link}
                href={"https://soundcloud.com/disukomusic"}
                platform={"nextjs"}
              >
                <div className={classNames(projectcss.all, sty.columns__mxqp8)}>
                  <div
                    className={classNames(projectcss.all, sty.column__jcqP7)}
                  >
                    <BrandSoundcloudSvgIcon
                      className={classNames(projectcss.all, sty.svg__sz5Tf)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__crbm2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oq8Hc
                      )}
                    >
                      {"soundcloud"}
                    </div>
                  </div>
                </div>
              </PlasmicLink__>
            </Tilt>
            <Tilt
              data-plasmic-name={"audius"}
              data-plasmic-override={overrides.audius}
              className={classNames("__wab_instance", sty.audius)}
              glareEnable={false}
              gyroscope={true}
              tiltMaxAngleX={10}
              tiltMaxAngleY={10}
              tiltReverse={true}
              trackOnWindow={false}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link___64Sp
                )}
                component={Link}
                href={"https://audius.co/disuko"}
                platform={"nextjs"}
              >
                <div className={classNames(projectcss.all, sty.columns__hz44D)}>
                  <div
                    className={classNames(projectcss.all, sty.column__mIukv)}
                  >
                    <BrandSoundcloudSvgIcon
                      className={classNames(projectcss.all, sty.svg__kkSkO)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__rllTo)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__v1Iwz
                      )}
                    >
                      {"audius"}
                    </div>
                  </div>
                </div>
              </PlasmicLink__>
            </Tilt>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__bpvVw
              )}
            >
              {"socials"}
            </div>
            <Tilt
              data-plasmic-name={"instagram"}
              data-plasmic-override={overrides.instagram}
              className={classNames("__wab_instance", sty.instagram)}
              glareEnable={false}
              gyroscope={true}
              tiltMaxAngleX={10}
              tiltMaxAngleY={10}
              tiltReverse={true}
              trackOnWindow={false}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__lkCd7
                )}
                component={Link}
                href={"https://instagram.com/disukomusic"}
                platform={"nextjs"}
              >
                <div className={classNames(projectcss.all, sty.columns__fUdD8)}>
                  <div
                    className={classNames(projectcss.all, sty.column___2Mk9X)}
                  >
                    <BrandInstagramSvgIcon
                      className={classNames(projectcss.all, sty.svg___4MCt)}
                      role={"img"}
                    />
                  </div>
                  <div className={classNames(projectcss.all, sty.column__iMdX)}>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5Tk9I
                      )}
                    >
                      {"instagram"}
                    </div>
                  </div>
                </div>
              </PlasmicLink__>
            </Tilt>
            <Tilt
              data-plasmic-name={"youtube"}
              data-plasmic-override={overrides.youtube}
              className={classNames("__wab_instance", sty.youtube)}
              glareEnable={false}
              gyroscope={true}
              tiltMaxAngleX={10}
              tiltMaxAngleY={10}
              tiltReverse={true}
              trackOnWindow={false}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__xvXVj
                )}
                component={Link}
                href={"https://youtube.com/disuko"}
                platform={"nextjs"}
              >
                <div className={classNames(projectcss.all, sty.columns__v9Qrr)}>
                  <div
                    className={classNames(projectcss.all, sty.column__vu9Lr)}
                  >
                    <BrandYoutubeSvgIcon
                      className={classNames(projectcss.all, sty.svg__wse8F)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__hCrqq)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0JrJu
                      )}
                    >
                      {"youtube"}
                    </div>
                  </div>
                </div>
              </PlasmicLink__>
            </Tilt>
            <Tilt
              data-plasmic-name={"bluesky"}
              data-plasmic-override={overrides.bluesky}
              className={classNames("__wab_instance", sty.bluesky)}
              glareEnable={false}
              gyroscope={true}
              tiltMaxAngleX={10}
              tiltMaxAngleY={10}
              tiltReverse={true}
              trackOnWindow={false}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__pNOj
                )}
                component={Link}
                href={"https://bsky.app/profile/disuko.gay"}
                platform={"nextjs"}
              >
                <div className={classNames(projectcss.all, sty.columns__bKoSu)}>
                  <div
                    className={classNames(projectcss.all, sty.column___3XmNl)}
                  >
                    <BlueskyLogoSvgIcon
                      className={classNames(projectcss.all, sty.svg__qcraa)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__l4Ngc)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jkCZ
                      )}
                    >
                      {"bluesky"}
                    </div>
                  </div>
                </div>
              </PlasmicLink__>
            </Tilt>
            <Tilt
              data-plasmic-name={"discord"}
              data-plasmic-override={overrides.discord}
              className={classNames("__wab_instance", sty.discord)}
              glareEnable={false}
              gyroscope={true}
              tiltMaxAngleX={10}
              tiltMaxAngleY={10}
              tiltReverse={true}
              trackOnWindow={false}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__xeDpR
                )}
                component={Link}
                href={"https://discord.gg/X2cTAwWsVT"}
                platform={"nextjs"}
              >
                <div className={classNames(projectcss.all, sty.columns__eDlS)}>
                  <div
                    className={classNames(projectcss.all, sty.column__pzlJz)}
                  >
                    <BrandDiscordSvgIcon
                      className={classNames(projectcss.all, sty.svg___8MCsS)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__y3Pzw)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zVlFc
                      )}
                    >
                      {"discord"}
                    </div>
                  </div>
                </div>
              </PlasmicLink__>
            </Tilt>
            <Tilt
              data-plasmic-name={"disukoFlipsYoutuibe"}
              data-plasmic-override={overrides.disukoFlipsYoutuibe}
              className={classNames("__wab_instance", sty.disukoFlipsYoutuibe)}
              glareEnable={false}
              gyroscope={true}
              tiltMaxAngleX={10}
              tiltMaxAngleY={10}
              tiltReverse={true}
              trackOnWindow={false}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link___123E
                )}
                component={Link}
                href={"https://youtube.com/@disukoflips"}
                platform={"nextjs"}
              >
                <div
                  className={classNames(projectcss.all, sty.columns___5Nqpn)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__oJOyb)}
                  >
                    <BrandYoutubeSvgIcon
                      className={classNames(projectcss.all, sty.svg__szn9)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__gOz5V)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uhd7T
                      )}
                    >
                      {"balisong youtube"}
                    </div>
                  </div>
                </div>
              </PlasmicLink__>
            </Tilt>
            <Tilt
              data-plasmic-name={"vero"}
              data-plasmic-override={overrides.vero}
              className={classNames("__wab_instance", sty.vero)}
              glareEnable={false}
              gyroscope={true}
              tiltMaxAngleX={10}
              tiltMaxAngleY={10}
              tiltReverse={true}
              trackOnWindow={false}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__atNns
                )}
                component={Link}
                href={"https://vero.co/disuko"}
                platform={"nextjs"}
              >
                <div className={classNames(projectcss.all, sty.columns__sfVbJ)}>
                  <div
                    className={classNames(projectcss.all, sty.column__minTe)}
                  >
                    <LinkSvgIcon
                      className={classNames(projectcss.all, sty.svg__bkZ4Y)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__sKstm)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__v64Rp
                      )}
                    >
                      {"vero"}
                    </div>
                  </div>
                </div>
              </PlasmicLink__>
            </Tilt>
            <Tilt
              data-plasmic-name={"twitter"}
              data-plasmic-override={overrides.twitter}
              className={classNames("__wab_instance", sty.twitter)}
              glareEnable={false}
              gyroscope={true}
              tiltMaxAngleX={10}
              tiltMaxAngleY={10}
              tiltReverse={true}
              trackOnWindow={false}
            >
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__cz6A8
                )}
                component={Link}
                href={"https://twitter.com/sukocloud"}
                platform={"nextjs"}
              >
                <div className={classNames(projectcss.all, sty.columns__ow9Jq)}>
                  <div
                    className={classNames(projectcss.all, sty.column__bEhbs)}
                  >
                    <BrandTwitterSvgIcon
                      className={classNames(projectcss.all, sty.svg__hIvqZ)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column___80Ob2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__o6IKi
                      )}
                    >
                      {"twitter"}
                    </div>
                  </div>
                </div>
              </PlasmicLink__>
            </Tilt>
          </Stack__>
          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />

          <Embed
            data-plasmic-name={"embedHtml"}
            data-plasmic-override={overrides.embedHtml}
            className={classNames("__wab_instance", sty.embedHtml)}
            code={
              '<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9278519288082067"\r\n     crossorigin="anonymous"></script>'
            }
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "windowButton",
    "popover",
    "navbar",
    "main",
    "img",
    "spotify",
    "itunes",
    "bandcamp",
    "soundcloud",
    "audius",
    "instagram",
    "youtube",
    "bluesky",
    "discord",
    "disukoFlipsYoutuibe",
    "vero",
    "twitter",
    "footer",
    "embedHtml"
  ],
  windowButton: ["windowButton", "popover"],
  popover: ["popover"],
  navbar: ["navbar"],
  main: [
    "main",
    "img",
    "spotify",
    "itunes",
    "bandcamp",
    "soundcloud",
    "audius",
    "instagram",
    "youtube",
    "bluesky",
    "discord",
    "disukoFlipsYoutuibe",
    "vero",
    "twitter"
  ],
  img: ["img"],
  spotify: ["spotify"],
  itunes: ["itunes"],
  bandcamp: ["bandcamp"],
  soundcloud: ["soundcloud"],
  audius: ["audius"],
  instagram: ["instagram"],
  youtube: ["youtube"],
  bluesky: ["bluesky"],
  discord: ["discord"],
  disukoFlipsYoutuibe: ["disukoFlipsYoutuibe"],
  vero: ["vero"],
  twitter: ["twitter"],
  footer: ["footer"],
  embedHtml: ["embedHtml"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  windowButton: typeof WindowButton;
  popover: typeof AntdPopover;
  navbar: typeof Navbar;
  main: "div";
  img: typeof PlasmicImg__;
  spotify: typeof Tilt;
  itunes: typeof Tilt;
  bandcamp: typeof Tilt;
  soundcloud: typeof Tilt;
  audius: typeof Tilt;
  instagram: typeof Tilt;
  youtube: typeof Tilt;
  bluesky: typeof Tilt;
  discord: typeof Tilt;
  disukoFlipsYoutuibe: typeof Tilt;
  vero: typeof Tilt;
  twitter: typeof Tilt;
  footer: typeof Footer;
  embedHtml: typeof Embed;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLinks__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLinks__VariantsArgs;
    args?: PlasmicLinks__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLinks__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicLinks__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicLinks__ArgProps,
          internalVariantPropNames: PlasmicLinks__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicLinks__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLinks";
  } else {
    func.displayName = `PlasmicLinks.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "x4VgG6kzZCVuaqknYN7tgc"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicLinks = Object.assign(
  // Top-level PlasmicLinks renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    windowButton: makeNodeComponent("windowButton"),
    popover: makeNodeComponent("popover"),
    navbar: makeNodeComponent("navbar"),
    main: makeNodeComponent("main"),
    img: makeNodeComponent("img"),
    spotify: makeNodeComponent("spotify"),
    itunes: makeNodeComponent("itunes"),
    bandcamp: makeNodeComponent("bandcamp"),
    soundcloud: makeNodeComponent("soundcloud"),
    audius: makeNodeComponent("audius"),
    instagram: makeNodeComponent("instagram"),
    youtube: makeNodeComponent("youtube"),
    bluesky: makeNodeComponent("bluesky"),
    discord: makeNodeComponent("discord"),
    disukoFlipsYoutuibe: makeNodeComponent("disukoFlipsYoutuibe"),
    vero: makeNodeComponent("vero"),
    twitter: makeNodeComponent("twitter"),
    footer: makeNodeComponent("footer"),
    embedHtml: makeNodeComponent("embedHtml"),

    // Metadata about props expected for PlasmicLinks
    internalVariantProps: PlasmicLinks__VariantProps,
    internalArgProps: PlasmicLinks__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "disuko - links 🌸",
      description:
        "~social media platforms and other important links for the disuko youtube channel and streaming services.",
      ogImageSrc:
        "https://site-assets.plasmic.app/f33b16e8e3629b301959c659f5c8f11d.jpg",
      canonical: "https://disuko.gay/links"
    }
  }
);

export default PlasmicLinks;
/* prettier-ignore-end */
