// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: x4VgG6kzZCVuaqknYN7tgc

import * as React from "react";
import { hasVariant, ensureGlobalVariants } from "@plasmicapp/react-web";
import { CommerceProviderComponent } from "@plasmicpkgs/commerce-shopify";
import { ParallaxProviderWrapper } from "@plasmicpkgs/react-scroll-parallax";
import { AntdConfigProvider } from "@plasmicpkgs/antd5/skinny/registerConfigProvider";
import { EmbedCss } from "@plasmicpkgs/plasmic-embed-css";

export interface GlobalContextsProviderProps {
  children?: React.ReactElement;
  commerceProviderComponentProps?: Partial<
    Omit<React.ComponentProps<typeof CommerceProviderComponent>, "children">
  >;

  parallaxProviderWrapperProps?: Partial<
    Omit<React.ComponentProps<typeof ParallaxProviderWrapper>, "children">
  >;

  antdConfigProviderProps?: Partial<
    Omit<React.ComponentProps<typeof AntdConfigProvider>, "children">
  >;

  embedCssProps?: Partial<
    Omit<React.ComponentProps<typeof EmbedCss>, "children">
  >;
}

export default function GlobalContextsProvider(
  props: GlobalContextsProviderProps
) {
  const {
    children,
    commerceProviderComponentProps,
    parallaxProviderWrapperProps,
    antdConfigProviderProps,
    embedCssProps
  } = props;

  return (
    <CommerceProviderComponent
      {...commerceProviderComponentProps}
      accessToken={
        commerceProviderComponentProps &&
        "accessToken" in commerceProviderComponentProps
          ? commerceProviderComponentProps.accessToken!
          : "ef7d41c7bf7e1c214074d0d3047bcd7b"
      }
      storeDomain={
        commerceProviderComponentProps &&
        "storeDomain" in commerceProviderComponentProps
          ? commerceProviderComponentProps.storeDomain!
          : "next-js-store.myshopify.com"
      }
    >
      <ParallaxProviderWrapper
        {...parallaxProviderWrapperProps}
        scrollAxis={
          parallaxProviderWrapperProps &&
          "scrollAxis" in parallaxProviderWrapperProps
            ? parallaxProviderWrapperProps.scrollAxis!
            : "vertical"
        }
      >
        <AntdConfigProvider
          {...antdConfigProviderProps}
          borderRadius={
            antdConfigProviderProps && "borderRadius" in antdConfigProviderProps
              ? antdConfigProviderProps.borderRadius!
              : 6
          }
          colorBgBase={
            antdConfigProviderProps && "colorBgBase" in antdConfigProviderProps
              ? antdConfigProviderProps.colorBgBase!
              : "#ffffff"
          }
          colorError={
            antdConfigProviderProps && "colorError" in antdConfigProviderProps
              ? antdConfigProviderProps.colorError!
              : "#ff4d4f"
          }
          colorInfo={
            antdConfigProviderProps && "colorInfo" in antdConfigProviderProps
              ? antdConfigProviderProps.colorInfo!
              : "#1677ff"
          }
          colorPrimary={
            antdConfigProviderProps && "colorPrimary" in antdConfigProviderProps
              ? antdConfigProviderProps.colorPrimary!
              : "#1677ff"
          }
          colorSuccess={
            antdConfigProviderProps && "colorSuccess" in antdConfigProviderProps
              ? antdConfigProviderProps.colorSuccess!
              : "#52c41a"
          }
          colorWarning={
            antdConfigProviderProps && "colorWarning" in antdConfigProviderProps
              ? antdConfigProviderProps.colorWarning!
              : "#faad14"
          }
          controlHeight={
            antdConfigProviderProps &&
            "controlHeight" in antdConfigProviderProps
              ? antdConfigProviderProps.controlHeight!
              : 32
          }
          defaultDark={
            antdConfigProviderProps && "defaultDark" in antdConfigProviderProps
              ? antdConfigProviderProps.defaultDark!
              : false
          }
          lineWidth={
            antdConfigProviderProps && "lineWidth" in antdConfigProviderProps
              ? antdConfigProviderProps.lineWidth!
              : 1
          }
          loadingText={
            antdConfigProviderProps && "loadingText" in antdConfigProviderProps
              ? antdConfigProviderProps.loadingText!
              : undefined
          }
          removeLoading={
            antdConfigProviderProps &&
            "removeLoading" in antdConfigProviderProps
              ? antdConfigProviderProps.removeLoading!
              : undefined
          }
          sizeStep={
            antdConfigProviderProps && "sizeStep" in antdConfigProviderProps
              ? antdConfigProviderProps.sizeStep!
              : 4
          }
          sizeUnit={
            antdConfigProviderProps && "sizeUnit" in antdConfigProviderProps
              ? antdConfigProviderProps.sizeUnit!
              : 4
          }
          themeStyles={
            antdConfigProviderProps && "themeStyles" in antdConfigProviderProps
              ? antdConfigProviderProps.themeStyles!
              : true
              ? {
                  fontFamily: "VT323",
                  fontSize: "16px",
                  fontWeight: "400",
                  lineHeight: "1.5",
                  color: "#80709A",
                  letterSpacing: "normal"
                }
              : undefined
          }
          wireframe={
            antdConfigProviderProps && "wireframe" in antdConfigProviderProps
              ? antdConfigProviderProps.wireframe!
              : false
          }
        >
          <EmbedCss
            {...embedCssProps}
            css={
              embedCssProps && "css" in embedCssProps
                ? embedCssProps.css!
                : "body {\r\n      cursor: url('https://i6.glitter-graphics.org/pub/2296/2296576mt8r4rci40.gif'), auto;\r\n\r\n          @-webkit-keyframes snowflakes-fall{0%{top:-10%}100%{top:100%}}@-webkit-keyframes snowflakes-shake{0%,100%{-webkit-transform:translateX(0);transform:translateX(0)}50%{-webkit-transform:translateX(80px);transform:translateX(80px)}}@keyframes snowflakes-fall{0%{top:-10%}100%{top:100%}}@keyframes snowflakes-shake{0%,100%{transform:translateX(0)}50%{transform:translateX(80px)}}.snowflake{position:fixed;top:-10%;z-index:9999;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default;-webkit-animation-name:snowflakes-fall,snowflakes-shake;-webkit-animation-duration:10s,3s;-webkit-animation-timing-function:linear,ease-in-out;-webkit-animation-iteration-count:infinite,infinite;-webkit-animation-play-state:running,running;animation-name:snowflakes-fall,snowflakes-shake;animation-duration:10s,3s;animation-timing-function:linear,ease-in-out;animation-iteration-count:infinite,infinite;animation-play-state:running,running}.snowflake:nth-of-type(0){left:1%;-webkit-animation-delay:0s,0s;animation-delay:0s,0s}.snowflake:nth-of-type(1){left:10%;-webkit-animation-delay:1s,1s;animation-delay:1s,1s}.snowflake:nth-of-type(2){left:20%;-webkit-animation-delay:6s,.5s;animation-delay:6s,.5s}.snowflake:nth-of-type(3){left:30%;-webkit-animation-delay:4s,2s;animation-delay:4s,2s}.snowflake:nth-of-type(4){left:40%;-webkit-animation-delay:2s,2s;animation-delay:2s,2s}.snowflake:nth-of-type(5){left:50%;-webkit-animation-delay:8s,3s;animation-delay:8s,3s}.snowflake:nth-of-type(6){left:60%;-webkit-animation-delay:6s,2s;animation-delay:6s,2s}.snowflake:nth-of-type(7){left:70%;-webkit-animation-delay:2.5s,1s;animation-delay:2.5s,1s}.snowflake:nth-of-type(8){left:80%;-webkit-animation-delay:1s,0s;animation-delay:1s,0s}.snowflake:nth-of-type(9){left:90%;-webkit-animation-delay:3s,1.5s;animation-delay:3s,1.5s}.snowflake:nth-of-type(10){left:25%;-webkit-animation-delay:2s,0s;animation-delay:2s,0s}.snowflake:nth-of-type(11){left:65%;-webkit-animation-delay:4s,2.5s;animation-delay:4s,2.5s}\r\n}\r\n\r\n"
            }
          >
            {children}
          </EmbedCss>
        </AntdConfigProvider>
      </ParallaxProviderWrapper>
    </CommerceProviderComponent>
  );
}
